{"conversation_id": "SIMPLE_EASY_7_000", "scenario": "simple", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_EASY_7_000'\n   - scenario == 'simple'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 347712782\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_EASY_7_001", "scenario": "simple", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_EASY_7_001'\n   - scenario == 'simple'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 161973069\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_EASY_7_002", "scenario": "simple", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_EASY_7_002'\n   - scenario == 'simple'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 423938499\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_EASY_7_003", "scenario": "simple", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_EASY_7_003'\n   - scenario == 'simple'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 698935572\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_EASY_7_004", "scenario": "simple", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_EASY_7_004'\n   - scenario == 'simple'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 51847156\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_EASY_7_005", "scenario": "simple", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_EASY_7_005'\n   - scenario == 'simple'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 77777868\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_MODERATE_7_000", "scenario": "simple", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_MODERATE_7_000'\n   - scenario == 'simple'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 881836553\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_MODERATE_7_001", "scenario": "simple", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_MODERATE_7_001'\n   - scenario == 'simple'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 575398922\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_MODERATE_7_002", "scenario": "simple", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_MODERATE_7_002'\n   - scenario == 'simple'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 101071364\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_MODERATE_7_003", "scenario": "simple", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_MODERATE_7_003'\n   - scenario == 'simple'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 392655486\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_MODERATE_7_004", "scenario": "simple", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_MODERATE_7_004'\n   - scenario == 'simple'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 625763863\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_MODERATE_7_005", "scenario": "simple", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_MODERATE_7_005'\n   - scenario == 'simple'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 62275869\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_COMPLEX_7_000", "scenario": "simple", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_COMPLEX_7_000'\n   - scenario == 'simple'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 976787301\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_COMPLEX_7_001", "scenario": "simple", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_COMPLEX_7_001'\n   - scenario == 'simple'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 544854973\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_COMPLEX_7_002", "scenario": "simple", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_COMPLEX_7_002'\n   - scenario == 'simple'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 230530419\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_COMPLEX_7_003", "scenario": "simple", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_COMPLEX_7_003'\n   - scenario == 'simple'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 40260662\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_COMPLEX_7_004", "scenario": "simple", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_COMPLEX_7_004'\n   - scenario == 'simple'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 92285142\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "SIMPLE_COMPLEX_7_005", "scenario": "simple", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: SIMPLE\n\nSIMPLE FACT STORAGE & RECALL.\n- The user states a personal fact early in the chat.\n- Later, the user asks a question that requires recalling that exact fact.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'SIMPLE_COMPLEX_7_005'\n   - scenario == 'simple'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 465623510\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_EASY_7_000", "scenario": "update", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_EASY_7_000'\n   - scenario == 'update'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 449008934\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_EASY_7_001", "scenario": "update", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_EASY_7_001'\n   - scenario == 'update'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 75006691\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_EASY_7_002", "scenario": "update", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_EASY_7_002'\n   - scenario == 'update'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 258409929\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_EASY_7_003", "scenario": "update", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_EASY_7_003'\n   - scenario == 'update'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 97402358\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_EASY_7_004", "scenario": "update", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_EASY_7_004'\n   - scenario == 'update'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 591682483\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_EASY_7_005", "scenario": "update", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_EASY_7_005'\n   - scenario == 'update'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 455824009\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_MODERATE_7_000", "scenario": "update", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_MODERATE_7_000'\n   - scenario == 'update'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 63469421\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_MODERATE_7_001", "scenario": "update", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_MODERATE_7_001'\n   - scenario == 'update'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 887825707\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_MODERATE_7_002", "scenario": "update", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_MODERATE_7_002'\n   - scenario == 'update'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 607151283\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_MODERATE_7_003", "scenario": "update", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_MODERATE_7_003'\n   - scenario == 'update'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 132931336\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_MODERATE_7_004", "scenario": "update", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_MODERATE_7_004'\n   - scenario == 'update'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 239701014\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_MODERATE_7_005", "scenario": "update", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_MODERATE_7_005'\n   - scenario == 'update'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 677129422\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_COMPLEX_7_000", "scenario": "update", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_COMPLEX_7_000'\n   - scenario == 'update'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 673701293\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_COMPLEX_7_001", "scenario": "update", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_COMPLEX_7_001'\n   - scenario == 'update'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 625988156\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_COMPLEX_7_002", "scenario": "update", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_COMPLEX_7_002'\n   - scenario == 'update'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 66423868\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_COMPLEX_7_003", "scenario": "update", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_COMPLEX_7_003'\n   - scenario == 'update'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 619659571\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_COMPLEX_7_004", "scenario": "update", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_COMPLEX_7_004'\n   - scenario == 'update'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 628720317\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "UPDATE_COMPLEX_7_005", "scenario": "update", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: UPDATE\n\nFACT UPDATE / CORRECTION.\n- The user states a fact, then later corrects or updates it.\n- The final question asks for the CURRENT value (most recent truth).\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'UPDATE_COMPLEX_7_005'\n   - scenario == 'update'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 425932421\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_EASY_7_000", "scenario": "multihop", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_EASY_7_000'\n   - scenario == 'multihop'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 53246119\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_EASY_7_001", "scenario": "multihop", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_EASY_7_001'\n   - scenario == 'multihop'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 237384804\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_EASY_7_002", "scenario": "multihop", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_EASY_7_002'\n   - scenario == 'multihop'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 50017772\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_EASY_7_003", "scenario": "multihop", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_EASY_7_003'\n   - scenario == 'multihop'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 597714383\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_EASY_7_004", "scenario": "multihop", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_EASY_7_004'\n   - scenario == 'multihop'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 921773490\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_EASY_7_005", "scenario": "multihop", "difficulty": "easy", "temperature": 0.6, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: EASY\nEASY: Minimal noise/distraction; direct statements; no typos; clear phrasing; short chat (4–6 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_EASY_7_005'\n   - scenario == 'multihop'\n   - difficulty == 'easy'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 142995371\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_MODERATE_7_000", "scenario": "multihop", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_MODERATE_7_000'\n   - scenario == 'multihop'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 310965605\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_MODERATE_7_001", "scenario": "multihop", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_MODERATE_7_001'\n   - scenario == 'multihop'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 450047120\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_MODERATE_7_002", "scenario": "multihop", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_MODERATE_7_002'\n   - scenario == 'multihop'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 154892713\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_MODERATE_7_003", "scenario": "multihop", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_MODERATE_7_003'\n   - scenario == 'multihop'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 580557051\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_MODERATE_7_004", "scenario": "multihop", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_MODERATE_7_004'\n   - scenario == 'multihop'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 126478448\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_MODERATE_7_005", "scenario": "multihop", "difficulty": "moderate", "temperature": 0.8, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: MODERATE\nMODERATE: Add realistic noise (chit-chat, typos, minor coreference); medium length (4–8 turns); answer still unambiguous.\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_MODERATE_7_005'\n   - scenario == 'multihop'\n   - difficulty == 'moderate'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 613013910\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_COMPLEX_7_000", "scenario": "multihop", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_COMPLEX_7_000'\n   - scenario == 'multihop'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 331229838\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_COMPLEX_7_001", "scenario": "multihop", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_COMPLEX_7_001'\n   - scenario == 'multihop'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 601571670\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_COMPLEX_7_002", "scenario": "multihop", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_COMPLEX_7_002'\n   - scenario == 'multihop'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 876309003\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_COMPLEX_7_003", "scenario": "multihop", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_COMPLEX_7_003'\n   - scenario == 'multihop'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 732294821\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_COMPLEX_7_004", "scenario": "multihop", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_COMPLEX_7_004'\n   - scenario == 'multihop'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 194053474\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
{"conversation_id": "MULTIHOP_COMPLEX_7_005", "scenario": "multihop", "difficulty": "complex", "temperature": 1.0, "system": "You are a data generator for evaluating conversational memory systems. Your job is to create synthetic multi-turn dialogues that rigorously test memory. ALWAYS return STRICT JSON only, no prose, matching the requested schema. Never include commentary outside JSON.", "user": "SCENARIO: MULTIHOP\n\nMULTI-HOP REASONING.\n- The user gives two+ related facts across turns.\n- The final question requires combining them.\n- If two fields must be returned, join them exactly with \"; \" (semicolon+space), not words.\n\nDIFFICULTY: COMPLEX\nCOMPLEX: Heavier noise (multi-topic chatter, emojis, multilingual snippets), stronger coreference, long gaps between fact & question; longer chat (8–10 turns).\n\nGoal\nCreate ONE conversation and ONE eval item.\nThe eval item verifies a SINGLE factual point from the conversation.\n\nHard constraints (must all be satisfied)\n1) Exactly ONE eval item for the conversation.\n2) eval.question = the FINAL user message, asking about EXACTLY ONE fact only.\n   - No compound questions, no lists, no comparisons.\n   - Disallow conjunctions/joins: 'and', 'or', 'as well as', '&', '/'.\n   - Disallow commas/semicolons/colons in the question.\n   - End with a single '?' and be ≤ 120 characters.\n3) eval.expected_answer = a SHORT PHRASE only:\n   - all lowercase, no leading/trailing spaces, no punctuation other than internal spaces or hyphens\n   - not a full sentence; must not contain verbs like 'is/are/was/were/do/does/did/can/should'\n   - no trailing period\n4) eval.relevant_texts = 1–3 snippets supporting the answer:\n   - each snippet lowercase and trimmed, no trailing punctuation\n   - quote exact or near-exact spans from the conversation (no new facts)\n   - 5–140 characters each\n5) conversation/eval fields MUST match exactly:\n   - conversation_id == 'MULTIHOP_COMPLEX_7_005'\n   - scenario == 'multihop'\n   - difficulty == 'complex'\n6) Output STRICT JSON ONLY. No backticks, no commentary, no XML/YAML.\n7) ASCII characters only.\n\nGuidance\n- If a natural question would require two facts, rewrite it to focus on one dimension only.\n  Example: instead of 'what do giant pandas eat and where are they from?', ask 'what do giant pandas eat?'\n- Prefer concrete, unambiguous facts that can be justified by 1–2 short snippets.\n- Keep conversation realistic but concise; avoid repeating the exact answer verbatim multiple times.\n\nForbidden patterns (reject/avoid and rewrite BEFORE outputting JSON)\n- Questions containing: ' and ', ' or ', ',', ';', ':', '/', '&', ' as well as '\n- expected_answer with uppercase letters, punctuation at the end, or being a full sentence.\n- relevant_texts with trailing punctuation or text not present/implied in the conversation.\n\nSelf-check BEFORE emitting JSON (all must be true)\n- [Q1] Is the final question single-fact and ends with '?' with no commas/joins?\n- [A1] Is expected_answer a short, lowercase phrase (no sentence, no trailing punctuation, no verbs like 'is/are')?\n- [E1] Do 1–3 relevant_texts justify A1, are lowercase, trimmed, and have no trailing punctuation?\n- [M1] Do conversation_id/scenario/difficulty EXACTLY match the specified values?\n- If any check fails, fix the conversation/question/answer and re-check.\n\nSeed: 110655224\n\nReturn JSON with keys:\n{\n  \"conversation_id\": str,\n  \"scenario\": \"simple\" | \"update\" | \"multihop\",\n  \"difficulty\": \"easy\" | \"moderate\" | \"complex\",\n  \"noise_tags\": [str, ...],\n  \"turns\": [{\"role\":\"user|assistant\",\"content\": str}, ...],\n  \"eval\": [\n    {\n      \"question\": str,\n      \"expected_answer\": str,  // short phrase only per rules\n      \"relevant_texts\": [str, ...],\n      \"subject_hint\": str | null\n    }\n  ]\n}\n", "model": "gemini-flash"}
